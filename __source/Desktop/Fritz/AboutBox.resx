<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>